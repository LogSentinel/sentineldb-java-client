/*
 * SentinelDB RESTful API
 * Read more at https://docs.sentineldb.io
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.sentineldb.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * AccessControl
 */

public class AccessControl {
  /**
   * Gets or Sets action
   */
  public enum ActionEnum {
    CREATE("CREATE"),
    
    UPDATE("UPDATE"),
    
    DELETE("DELETE"),
    
    SEARCH("SEARCH");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionEnum fromValue(String text) {
      for (ActionEnum b : ActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("action")
  private ActionEnum action = null;

  @JsonProperty("created")
  private OffsetDateTime created = null;

  @JsonProperty("datastoreId")
  private UUID datastoreId = null;

  @JsonProperty("deleted")
  private Boolean deleted = null;

  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("pseudoId")
  private String pseudoId = null;

  @JsonProperty("recordIds")
  private List<UUID> recordIds = null;

  @JsonProperty("recordType")
  private String recordType = null;

  @JsonProperty("roles")
  private List<String> roles = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ALLOW("ALLOW"),
    
    DENY("DENY");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("updated")
  private OffsetDateTime updated = null;

  public AccessControl action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @ApiModelProperty(value = "")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public AccessControl created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public AccessControl datastoreId(UUID datastoreId) {
    this.datastoreId = datastoreId;
    return this;
  }

   /**
   * Get datastoreId
   * @return datastoreId
  **/
  @ApiModelProperty(value = "")
  public UUID getDatastoreId() {
    return datastoreId;
  }

  public void setDatastoreId(UUID datastoreId) {
    this.datastoreId = datastoreId;
  }

  public AccessControl deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public AccessControl id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public AccessControl pseudoId(String pseudoId) {
    this.pseudoId = pseudoId;
    return this;
  }

   /**
   * Get pseudoId
   * @return pseudoId
  **/
  @ApiModelProperty(value = "")
  public String getPseudoId() {
    return pseudoId;
  }

  public void setPseudoId(String pseudoId) {
    this.pseudoId = pseudoId;
  }

  public AccessControl recordIds(List<UUID> recordIds) {
    this.recordIds = recordIds;
    return this;
  }

  public AccessControl addRecordIdsItem(UUID recordIdsItem) {
    if (this.recordIds == null) {
      this.recordIds = new ArrayList<>();
    }
    this.recordIds.add(recordIdsItem);
    return this;
  }

   /**
   * Get recordIds
   * @return recordIds
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getRecordIds() {
    return recordIds;
  }

  public void setRecordIds(List<UUID> recordIds) {
    this.recordIds = recordIds;
  }

  public AccessControl recordType(String recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Get recordType
   * @return recordType
  **/
  @ApiModelProperty(value = "")
  public String getRecordType() {
    return recordType;
  }

  public void setRecordType(String recordType) {
    this.recordType = recordType;
  }

  public AccessControl roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public AccessControl addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(value = "")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public AccessControl type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AccessControl updated(OffsetDateTime updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdated() {
    return updated;
  }

  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessControl accessControl = (AccessControl) o;
    return Objects.equals(this.action, accessControl.action) &&
        Objects.equals(this.created, accessControl.created) &&
        Objects.equals(this.datastoreId, accessControl.datastoreId) &&
        Objects.equals(this.deleted, accessControl.deleted) &&
        Objects.equals(this.id, accessControl.id) &&
        Objects.equals(this.pseudoId, accessControl.pseudoId) &&
        Objects.equals(this.recordIds, accessControl.recordIds) &&
        Objects.equals(this.recordType, accessControl.recordType) &&
        Objects.equals(this.roles, accessControl.roles) &&
        Objects.equals(this.type, accessControl.type) &&
        Objects.equals(this.updated, accessControl.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, created, datastoreId, deleted, id, pseudoId, recordIds, recordType, roles, type, updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessControl {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    datastoreId: ").append(toIndentedString(datastoreId)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pseudoId: ").append(toIndentedString(pseudoId)).append("\n");
    sb.append("    recordIds: ").append(toIndentedString(recordIds)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

